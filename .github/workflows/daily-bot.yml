name: Daily Bot Run

on:
  schedule:
    - cron: '0 12 * * *'  # Runs at 12:00 UTC every day
  workflow_dispatch:  # Allows manual trigger

jobs:
  run-bot:
    runs-on: ubuntu-latest
    permissions:
      actions: read   
      contents: read 

    steps:
    - uses: actions/checkout@v4
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y librsvg2-bin inkscape

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies
      working-directory: ./cdp-langchain/examples/chatbot-python
      run: poetry install
    
    - name: Create wallet
      working-directory: ./cdp-langchain/examples/chatbot-python
      run: |
        echo "$WALLET_SECRET" > wallet_data.txt
      env:
        WALLET_SECRET: ${{ secrets.WALLET_SECRET }}

    - name: Debug Artifact API Response
      run: |
          echo "Fetching all artifacts..."
          curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" > artifacts.json
  
          echo "API Response:"
          cat artifacts.json

    - name: Get Latest Artifact ID for mention_memory
      run: |
              echo "Fetching latest artifact ID for mention_memory..."
              ARTIFACT_ID=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${{ github.repository }}/actions/artifacts" | \
                jq -r '.artifacts | sort_by(.created_at) | reverse | .[] | select(.name=="mention_memory") | .id' | head -n 1)
      
              if [[ -z "$ARTIFACT_ID" ]]; then
                echo "No artifact found!"
                exit 1
              fi
      
              echo "Latest mention_memory Artifact ID: $ARTIFACT_ID"
              echo "ARTIFACT_ID=$ARTIFACT_ID" >> $GITHUB_ENV
      
    - name: Download Latest mention_memory Artifact
      run: |
              if [[ -z "$ARTIFACT_ID" ]]; then
                echo "❌ No artifact ID found. Skipping download."
                exit 0
              fi              
              echo "Downloading artifact ID $ARTIFACT_ID..."
              curl -L -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                -o mention_memory.zip \
                "https://api.github.com/repos/${{ github.repository }}/actions/artifacts/$ARTIFACT_ID/zip"
      
              unzip mention_memory.zip -d mention_memory
              ls -l mention_memory  
              cat mention_memory/mention_memory.txt
              mv mention_memory/mention_memory.txt ./cdp-langchain/examples/chatbot-python/mention_memory.txt

    - name: Ensure mention_memory.txt exists
      working-directory: ./cdp-langchain/examples/chatbot-python
      run: |
            if [ ! -f mention_memory.txt ]; then
              echo "Creating an empty mention_memory.txt file"
              echo "" > mention_memory.txt
            else
              echo "mention_memory.txt already exists"
            fi

    - name: Run bot
      working-directory: ./cdp-langchain/examples/chatbot-python
      env:
        NETWORK_ID: ${{ secrets.NETWORK_ID }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        CDP_API_KEY_NAME: ${{ secrets.CDP_API_KEY_NAME }}
        CDP_API_KEY_PRIVATE_KEY: ${{ secrets.CDP_API_KEY_PRIVATE_KEY }}
        ETHERSCAN_API_KEY: ${{ secrets.ETHERSCAN_API_KEY }}
        INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}
        TWITTER_API_KEY: ${{ secrets.TWITTER_API_KEY }}
        TWITTER_API_SECRET: ${{ secrets.TWITTER_API_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
      run: |
        poetry run python chatbot.py

    - name: Upload mention_memory artifact
      uses: actions/upload-artifact@v4
      with:
          name: mention_memory
          path: ./cdp-langchain/examples/chatbot-python/mention_memory.txt   
          overwrite: true

    - name: Upload SVG files
      uses: actions/upload-artifact@v4
      with:
        name: generated-svgs
        path: ./cdp-langchain/examples/chatbot-python/*.svg
        if-no-files-found: ignore  

    - name: Upload PNG files
      uses: actions/upload-artifact@v4
      with:
        name: generated-pngs
        path: ./cdp-langchain/examples/chatbot-python/*.png
        if-no-files-found: ignore    